一、引言
Linux是一种自由和开放源代码的类UNIX操作系统，该操作系统的内核最早在芬兰赫尔辛基大学计算机系的Linus Torvalds于1991年10月5日首次发布，目前Linux已经被移植到各种计算机硬件平台，其支持的种类远远超出其他任何操作系统。
Linux内核是以C语言写成并符合POSIX标准的操作系统，是一个提供硬件抽象层、磁盘及文件系统控制、多任务等功能的系统软件，从技术上说一个内核并不是一个完整的操作系统，所以通常情况下Linux内核被打包成供个人计算机和服务器使用的Linux发行版，比如Debian（及其派生版本Ubuntu），Fedora（及其相关版本Red Hat，CentOS）和openSUSE等，Linux发行版包含Linux内核和支撑内核的实用程序和库，通常还带有大量可以满足各类需求的应用程序。
由于内核本身的局限性太大，比如不能在终端上打印，不能做大延时的处理等等，所以当我们需要做这些的时候，就需要将在内核态采集到的数据传送到用户态进程中进行处理，满足用户的需求，这样，内核态与用户空间进程通信的方式就显得尤为重要。所以本文将调查研究Linux内核态与用户态通信的几种通信方式，并选择其中的一种方式实现linux用户态与内核态的数据通信。
